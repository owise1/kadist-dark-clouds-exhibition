var _pl={db:"liblib",design:"liblib-exhib"};window.URL=window.URL||window.webkitURL;var LibLibExhibApp=angular.module("LibLibExhibApp",["CornerCouch","ngSanitize"]).config(["$compileProvider",function(n){var i=/^\s*(https?|blob):/;n.aHrefSanitizationWhitelist(i),n.imgSrcSanitizationWhitelist(i)}]);LibLibExhibApp.controller("ListingCtrl",["$scope","$http","cornercouch",function(n,i,e){function t(){n.db.newDoc().load(s).success(function(i){n.exhibitionDoc=c(i)}).error(function(){n.db.newDoc({_id:s}).save().success(t).error(function(n){console.log("error 2"),console.log(n)})})}function o(){n.db.query(r.design,"media",{reduce:!1,limit:10,include_docs:!0}).success(function(i){n.medias=i.rows.map(R.prop("doc")).map(c).sort(function(n,i){return parseInt(n.info.order,10)>parseInt(i.info.order,10)}),t()})}function c(n){return n._attachments&&angular.forEach(n._attachments,function(i,e){/^cover\./.test(e)?n.coverImg="/"+r.db+"/"+n._id+"/"+e:(n.media=i,n.media.url="/"+r.db+"/"+n._id+"/"+e)}),n}var r=window._pl;n.db=e().getDB(r.db),n.touch=Modernizr.touch,n.currentVid=!1,n.setCurrent=function(i){n.currentVid=i},n.urlify=function(n){return"http://"+window.location.host+n};var s="liblib-exhib-exhibition";n.upload=function(i){for(var e,t=[],c=0;e=i.files[c];c++)t.push(e);t.forEach(function(i){var e=n.db.newDoc({name:i.name,content_type:i.type});e.save().success(function(){e.attach(i,i.name,o)})})},n.del=function(i){n.db.newDoc(i).remove().success(o)},n.save=function(i){var e=i.file;if(e){delete i.file;var t=n.db.newDoc(i);t.save().success(function(){t.attach(e,"cover."+e.name.split(".").pop(),o)})}else n.db.newDoc(i).save().success(o)},o()}]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(n,i){i.bind("change",function(i){n.$apply(function(){n.fileread=i.target.files[0]})})}}}]).filter("sanitize",["$sce",function(n){return function(i){return n.trustAsHtml(i)}}]);
function resizeToCover(){jQuery("#video-viewport").width(jQuery(window).width()),jQuery("#video-viewport").height(jQuery(window).height());var e=jQuery(window).width()/vid_w_orig,i=jQuery(window).height()/vid_h_orig,d=e>i?e:i;min_w>d*vid_w_orig&&(d=min_w/vid_w_orig),jQuery("#video-viewport video").width(d*vid_w_orig),jQuery("#video-viewport video").height(d*vid_h_orig),jQuery("#video-viewport").scrollLeft((jQuery("#video-viewport video").width()-jQuery(window).width())/2),jQuery("#video-viewport").scrollTop((jQuery("#video-viewport video").height()-jQuery(window).height())/2),jQuery("#debug").html("<p>win_w: "+jQuery(window).width()+"</p>"),jQuery("#debug").append("<p>win_h: "+jQuery(window).height()+"</p>"),jQuery("#debug").append("<p>viewport_w: "+jQuery("#video-viewport").width()+"</p>"),jQuery("#debug").append("<p>viewport_h: "+jQuery("#video-viewport").height()+"</p>"),jQuery("#debug").append("<p>video_w: "+jQuery("video").width()+"</p>"),jQuery("#debug").append("<p>video_h: "+jQuery("video").height()+"</p>"),jQuery("#debug").append("<p>vid_w_orig: "+vid_w_orig+"</p>"),jQuery("#debug").append("<p>vid_h_orig: "+vid_h_orig+"</p>"),jQuery("#debug").append("<p>scale: "+d+"</p>")}var min_w=300,vid_w_orig,vid_h_orig;jQuery(function(){vid_w_orig=parseInt(jQuery("video").attr("width")),vid_h_orig=parseInt(jQuery("video").attr("height"))});